---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5FWmFoRXhta1BlRXk2Y2NxU0pnanN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU1qQTRNRFl6TjFvWERUSTNNRFl5TWpBNApNRFl6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFtNFczdFBIMi9KVE5vL3h0REwrRmx2eFdIUytFdkdZRTRjeTRUSDIrd2oxQVBFakoKcEJ5c1NjOWRzbHcxWERFYXBFcUovZ2tHTDl2Q3dWTE51cTkxTyt1WEs5cWdrTHEvNUVEY2xZUWlicitOQ1Q4UApiTVM3MGwwUmVWck55UlN4OFBKZDcvUGIxLzk3TlgvakxFSzIzTmNQU280NnNHY2FOSkVQM09pY2I0cGo1amVNCko1dUpFSUc1ajIrbTBEbWlwMTFOaVY0TTRSdFkrak1pbzhrVHZhVkhVaGkyc3FPbHk5emZra25hb1MzZDU3RG8KRDlqWE4xWnUvVDZ6U0N5RDFCSzVHU2dPUzRvcVFrUWNLSFJzbEk0M3BxNlE0ZHpqUVFqTHZjVW54eUtIQzJlVwpCYmlYZ0MwdDlGZjJ3YS96Z0J3dXR5d3l2Y01ickRpSXlRWVQ1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhRdFplTmt4L0w4UHhJcXdVd2FBLytmOGd1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpEajhnYWdHRERRcWZsYVFuQjhLZmNYaFBDeURoV2xPYmNGVUp0WkJOTmtPOTRlVkxicUFJCk1raFVPY1krVlNwZ0JRQkx0eE9DY3BHSm42UUZINjFvdG5aekE0UUNqdGd1eUk3Mm8wSWRyTU4xOFJBWUtXeDcKVyt6dCtQcStTN2k2OEZCbGVna3dNbGZjY0ZhNExQQWVCUkE3cmVkV2FvRmJBRFJhZmlBZFMzbUpyT2tNL21zVApzNkZBRXpxSHFGTkk1Y29BejZ2RmdFTVEyZS93Ly9xOTc5RjgwcmlKb1d0MHViR3ZqSys0NzRMWk8xR291NVB4ClAxV09rYWdCeVJiZnRDTUJxVWhsTzZCeWo3UDdCRkFTcGtQVkhMd3Y0bnFROFBJYTJzcFlnbmpIRHZwQWs5ekEKWWpYMEFHYWFjR0xGQ3EzcDBXbE5xUG9McForUWptbmQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbTRXM3RQSDIvSlROby94dERMK0ZsdnhXSFMrRXZHWUU0Y3k0VEgyK3dqMUFQRWpKCnBCeXNTYzlkc2x3MVhERWFwRXFKL2drR0w5dkN3VkxOdXE5MU8rdVhLOXFna0xxLzVFRGNsWVFpYnIrTkNUOFAKYk1TNzBsMFJlVnJOeVJTeDhQSmQ3L1BiMS85N05YL2pMRUsyM05jUFNvNDZzR2NhTkpFUDNPaWNiNHBqNWplTQpKNXVKRUlHNWoyK20wRG1pcDExTmlWNE00UnRZK2pNaW84a1R2YVZIVWhpMnNxT2x5OXpma2tuYW9TM2Q1N0RvCkQ5alhOMVp1L1Q2elNDeUQxQks1R1NnT1M0b3FRa1FjS0hSc2xJNDNwcTZRNGR6alFRakx2Y1VueHlLSEMyZVcKQmJpWGdDMHQ5RmYyd2EvemdCd3V0eXd5dmNNYnJEaUl5UVlUNXdJREFRQUJBb0lCQUU2WHlabVFlYTkxQjJMcQpxclU1aUNvZ0JPaWszZUJUY2Y0bDliRDZEcytjSW4wVWo0bjJ6MzVSWTlsQnpkbDBHekdSVmFEaU1KVTQ2bmZGCi81OXJFY1NoTHZrRGVBY0x5UE54YjhmRFNaOUwvOXIvV2kwdVVuaGhmZllrMUQvY3pIdW1ENkMyVEpBZ1ZNUloKaDVVVGRkT3VmdFMvZ1pzcHowMW5UV3ZteFQ5OEY0bmlRa2p3V3htZmNuL0xtM1VtSG9FQ2g2TkVtRDZQQWhOZQpVZURuc3hqNDlQcGJrT3piRExpQWNGVzBYWndzRlRhZVVhSjRLUnBPL2RMWmx4YWZacDdnaElJRXNZazlVQ3RSCmVLZlFjQ1JFS1VpVEJDRDVpNlBvN09za2ZkMEtrdHU5V0VIRGlPbzc4MU5QdHZ4T295VFhCbW85UXU4MjlGRlEKS0tWUjk3RUNnWUVBeURoL2VqT3NFYk5ENnQ5K0hhZ1AvMFhNOFVld0pvTVVhTCtqbGtHVVpVZVJFQ2JVaGh2ZQpqNnZkVHpObmlvMDF1NHZ6cVYvR0s4Z2tGaTBIN2tKZEZYODJhanBqVXJmQkZRNnZMOWRNNzB4anA1L3l2ZWtmClhneUVBWDlMUUpYdU12YzJ1cjVUeFJkaGQ0VTV6TWp1R2RiRFNOZHFGdVlXMmQxdlZSVEV3NzhDZ1lFQXh0bGkKdTZCRG9JQjZGeUxLWS82T2swbHdjbmtwU3ZuVkwyU1plcWhkSTRQQW5JYXlZZHJVZ0xLbkYwNlRvVFpvVC9sQQpRTzVZVVUxcXljYkQya1VlMkJSVEFKNUhMTVdGQVJHSEJuclcvaHQrZE4rNE5YcWgrMzFBTnFNYkl3d0JkY1V0Ckg0WUpkWlhNa3ZQai91TGNwVWdIYk1kTDFkSzZDdkMxT282Qm1ka0NnWUEreHBnUmRJb0tzcTRrd2hZRXJtRDEKcEtqeExZenBSa2ZyMzhvbW5rRXMwQmVIZk9VOWR4ZDg3R0hqSnpiYmxoSzJ6dGFDMEdpTjZaNkc1VytMSUh1Vwo5ZC9WeHFERm1wK0xQcU5tMkpaaW9Rek56YlNLSHNHYTkwbWNQcEVWbXV5b1JpSit3cFg1UWE5cGpmZmxZVXBtCkI1UUxEcDlRdHF1TGU0WWdvdlplZVFLQmdDOHNCTU1UMnRjcGcwMFh3TUdGOHRhMzlrZ0J2QzBBSlhXdnZNVWYKU2JFU0lWQkFsL0trMGdLUjN4ZWxXVnBHS09ySDYxazc4WkdmOXZSVkJjTXk0SVZNRlFDeGk1cndaSVFEWDIvSApGbGVEdURVTG1ZeCtRZzBDQW9pem1zMXVuSzRPajR6SjVGYVRxY3MydG1DUit0dnV3V3dwdnpERFk4VVNvenQzCjhRREpBb0dBSzBRWUxIZTY0SUhqYTFlQW1wM2xtdUhjWGt6ejVMTjRuUnM3NDhwSGdXaWxEMlUyUi9yVWRHd2MKQnpiem4rYVFuRllVblBVNnJRVEJWQVhxZDNNNXZ5Q0ZaMVF0emxkZkQvU3pyNzRMbjd5MnZuYWdpcjFTY2k3YQpwZThoblY1RG1vazVHYTRpVmZnSTJveW9qUkpzSjlTTkN4dXpkZXp0R3EvSVA5bS9HWjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5FWmFoRXhta1BlRXk2Y2NxU0pnanN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU1qQTRNRFl6TjFvWERUSTNNRFl5TWpBNApNRFl6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFtNFczdFBIMi9KVE5vL3h0REwrRmx2eFdIUytFdkdZRTRjeTRUSDIrd2oxQVBFakoKcEJ5c1NjOWRzbHcxWERFYXBFcUovZ2tHTDl2Q3dWTE51cTkxTyt1WEs5cWdrTHEvNUVEY2xZUWlicitOQ1Q4UApiTVM3MGwwUmVWck55UlN4OFBKZDcvUGIxLzk3TlgvakxFSzIzTmNQU280NnNHY2FOSkVQM09pY2I0cGo1amVNCko1dUpFSUc1ajIrbTBEbWlwMTFOaVY0TTRSdFkrak1pbzhrVHZhVkhVaGkyc3FPbHk5emZra25hb1MzZDU3RG8KRDlqWE4xWnUvVDZ6U0N5RDFCSzVHU2dPUzRvcVFrUWNLSFJzbEk0M3BxNlE0ZHpqUVFqTHZjVW54eUtIQzJlVwpCYmlYZ0MwdDlGZjJ3YS96Z0J3dXR5d3l2Y01ickRpSXlRWVQ1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhRdFplTmt4L0w4UHhJcXdVd2FBLytmOGd1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpEajhnYWdHRERRcWZsYVFuQjhLZmNYaFBDeURoV2xPYmNGVUp0WkJOTmtPOTRlVkxicUFJCk1raFVPY1krVlNwZ0JRQkx0eE9DY3BHSm42UUZINjFvdG5aekE0UUNqdGd1eUk3Mm8wSWRyTU4xOFJBWUtXeDcKVyt6dCtQcStTN2k2OEZCbGVna3dNbGZjY0ZhNExQQWVCUkE3cmVkV2FvRmJBRFJhZmlBZFMzbUpyT2tNL21zVApzNkZBRXpxSHFGTkk1Y29BejZ2RmdFTVEyZS93Ly9xOTc5RjgwcmlKb1d0MHViR3ZqSys0NzRMWk8xR291NVB4ClAxV09rYWdCeVJiZnRDTUJxVWhsTzZCeWo3UDdCRkFTcGtQVkhMd3Y0bnFROFBJYTJzcFlnbmpIRHZwQWs5ekEKWWpYMEFHYWFjR0xGQ3EzcDBXbE5xUG9McForUWptbmQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVStxeVUvMjZieUhoaGdiRElSV3JWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpJeU1EZ3dOak0zV2hjTk1qY3dOakl5TURndwpOak0zV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNitKZ2JuWVZROGNQTmVzaSt6d2srTHV5b0JLNWcKd1JGNFBVSVc0MlNhdEJOMEJ3RDFmcHNzR0s2RERnSk5XRFRzZGtxMUVnMlBWVGRwZHduUjdERWJQYUsrSmo0WQovTENySDVnS3JYTk9qWGIyOExmck5KTHNWbjVyMTlJaGhRMzl4TlBpelpINmxONnNrUE1qUkd6MklpcGxlK2ozCmxyM1NJMXpkb1JhK2RQQ0RnVnhYSjZnblFLWVdmUFJIMU1BdWlRWFNJYWV2TW1yRE9XQW4weVo4RkhhRmdTU2YKaGpJcnZtRWZ1WTRwMUlkbWxZUzYveUlEWlJjbE83alFKVkhKeVNaUUp1ZVBIWS9MRElMYlpDN2pmeWdvY0Rtcwp3TUR1ZzlXQkRueTFZTE5BaVRHRXdodmFuazdneTNJY0FRR0NZdHBvR3kxaU5pUGkvWkFjb0hDWkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGOFF0WmVOa3gvTDhQeElxd1V3YUEvKwpmOGd1TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFFeXpaT3YwQXdqeTdPZ3pIN08vbWhWTlRuWktHNVF3cWptYzQzQ1NYWlJKQzhYV3kKV0UvQUJVVWhiVTd6enN6cVh1MjRvU2EwMGdqZm8ycWVQZFMrenFGdk5HbE1rODFPQXdoRmdqOXhITm5ic29FNQovV3BBekwzWHBPTncvbnRKNmhaTlk0cmFHVmxOVVhMZm9aVGY5OGFabklpSHduU2lOaGRDeGVXNDRIUExSdGxrCmRFTTVoVW1UUEtuUE1jdnBVcDA3aExaU2RXaFE2bzFxYmlSWkhob2Yydy82Z0FrdHBxcGQvRVRuM2ljR2Y5K2YKTHNhbWFGT21LWXZZd2hYeGtIYnpDSFZxZzFVVmhZcEtkVEhNNm41c1dYNzMwRUNYS2lJYUUzZExCTWNMbG5RaQp0cTJzVzBERFdnK0xuOStVVnhuV0RiMWltcnIxeEFaVElKc1Fidz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXZpWUc1MkZVUEhEelhySXZzOEpQaTdzcUFTdVlNRVJlRDFDRnVOa21yUVRkQWNBCjlYNmJMQml1Z3c0Q1RWZzA3SFpLdFJJTmoxVTNhWGNKMGV3eEd6Mml2aVkrR1B5d3F4K1lDcTF6VG8xMjl2QzMKNnpTUzdGWithOWZTSVlVTi9jVFQ0czJSK3BUZXJKRHpJMFJzOWlJcVpYdm85NWE5MGlOYzNhRVd2blR3ZzRGYwpWeWVvSjBDbUZuejBSOVRBTG9rRjBpR25yekpxd3psZ0o5TW1mQlIyaFlFa240WXlLNzVoSDdtT0tkU0hacFdFCnV2OGlBMlVYSlR1NDBDVlJ5Y2ttVUNibmp4MlB5d3lDMjJRdTQzOG9LSEE1ck1EQTdvUFZnUTU4dFdDelFJa3gKaE1JYjJwNU80TXR5SEFFQmdtTGFhQnN0WWpZajR2MlFIS0J3bVFJREFRQUJBb0lCQVFDZGlPWUlwcEYwb1MvYwpTdThucmlQWWpBc0VpbVV1eXAzZ2xLVEJ5aml6RExVelZzOWRDWjdPNmNEb1ZYNWxFc1FNMUtLZnJDVld0bk5vCjNrNmMzSWlIcmtnWU5QcXZiUUdpUFkyS3VaaGxBRmJUUEFHTElSSUdKZDZCR1NoSTYrWGRBdUdRd0txVjJxYy8KK1NXVGVvemdXZXNrOU9GVzgyRGUxTUxqVGw1dWUzK3YzOFZ3aGNQamhCRGRHd2ZRQTQxMzRuU3pWMGxpQXVNNgpxY1pyOTNkRTdzZ0xKbkJqU0ZWVFdpZ3U4VEZZTXFZRDFJcWVRcjJuQ1pRNlhNcFJWbUR0d1E1QkswajcrcVZWCndVTzdxeXd4TnNDMXRaK3E4Qzl3RUgyUEU5SklrTDJkbnVWckxEaWFkMVdGR0M4MzNwWXEvQ3ltT0gya013aVMKM2lsRzlweGRBb0dCQVBnU0JTUkZtZ2VPdVltOXdSTDlreWJIRHREUm5FdlN2OGFDTERSWWJhWDluTFJ0M2thZQpkdGdhZ3BZbkhFQyt3MkY2eG83Q05tMkJqcDM5NENwMmI1Y1VrY01iVm92UkRsYmlWUDZOcGtPZHhzN1BvU212CjdQSXFYd1lOZkNBYkJpb1hQU2NoaktiMG9oRitOQzV0NVc4RjlLeUFJY01MZHljTGc5MEMxeENmQW9HQkFNRHkKbCt3OVNOTnZEdVpnalFPa3JCQ1FRSWs3TzMwZFNEK0YrTEtpSW9tSEpFV0xVWFd0K2x5SDBWaUp4eCtLMTc0OQovREE2MHNqTHRCWVA5R0IzYklpWWgwRGFGQjB5SGNZRk5rd3Q5a0hrSTluVmVMeWVjU1pwQkdrV3RGeHhpc1grCmpmbU1pQ3VKMVltdDMzME9XVjc5aXpVaHlSNEdrMkxtcENrdE5sdkhBb0dBVCsyZWNuMXFqNXpROHl5TWxRM1cKNTl1alRtejdLd01RZjJsWnpOUGhJR2FDb3kvek9sVzhmUXl0bnF1alVza2tNcmhZV1k4QjhtNllBUmZYcmxiUwp4WjcvQ0JvNjNIblRZUE16NTRERVhXenNyWjRBazJuM3NsOHNsc3FwZjc2MVVjS0RGYVNkcVAyUmFvbDdUcXBpCkRrK2c4aU9tdlMxb2l0QVBBSnIxcUlrQ2dZQnZkZlRqYU1mQU5JRFQvdVNYUFRLVTR2QVZGcDJYK2lsNVlNZzUKVVVaSVVrUlcxRk43ZXNTTlhYeEcvRmlHVlN1cVg1NW1zaVNBRUlUNDFjQ2pWWG5pTXRLM1dRT1RsaGJ6QktISQpRaWpuQ1liWVdPUkZlZlg5YlY4NTRmN1JCRnBaWkdMWnpTQUFuc0EzcDdUYVJrYkVoQTA5NVVXTVRkb29vUG9tCk8xTVNrd0tCZ0NraUQxd28wRUhLTG5LR1FMTk9TdllVUmMyNTZtdVZwdHc1UElsZHYxWHRydXdncjFtRjRrcmUKem9xYXhJQlQ0aDJSU3lKYlFHeFJUTTlRSDFWeFk2SWI0bWlRQWxPYk5RZW9CUjRxYUoyOE5laU1rNGI0Zm0yTwpaUDZiUjhWZUwvcEtnaFRibFFURkVMOVgzdDRGaHU0Q2ExY3h1Z1crR0NCVVN6MEJqdTNhCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5FWmFoRXhta1BlRXk2Y2NxU0pnanN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU1qQTRNRFl6TjFvWERUSTNNRFl5TWpBNApNRFl6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFtNFczdFBIMi9KVE5vL3h0REwrRmx2eFdIUytFdkdZRTRjeTRUSDIrd2oxQVBFakoKcEJ5c1NjOWRzbHcxWERFYXBFcUovZ2tHTDl2Q3dWTE51cTkxTyt1WEs5cWdrTHEvNUVEY2xZUWlicitOQ1Q4UApiTVM3MGwwUmVWck55UlN4OFBKZDcvUGIxLzk3TlgvakxFSzIzTmNQU280NnNHY2FOSkVQM09pY2I0cGo1amVNCko1dUpFSUc1ajIrbTBEbWlwMTFOaVY0TTRSdFkrak1pbzhrVHZhVkhVaGkyc3FPbHk5emZra25hb1MzZDU3RG8KRDlqWE4xWnUvVDZ6U0N5RDFCSzVHU2dPUzRvcVFrUWNLSFJzbEk0M3BxNlE0ZHpqUVFqTHZjVW54eUtIQzJlVwpCYmlYZ0MwdDlGZjJ3YS96Z0J3dXR5d3l2Y01ickRpSXlRWVQ1d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhRdFplTmt4L0w4UHhJcXdVd2FBLytmOGd1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVpEajhnYWdHRERRcWZsYVFuQjhLZmNYaFBDeURoV2xPYmNGVUp0WkJOTmtPOTRlVkxicUFJCk1raFVPY1krVlNwZ0JRQkx0eE9DY3BHSm42UUZINjFvdG5aekE0UUNqdGd1eUk3Mm8wSWRyTU4xOFJBWUtXeDcKVyt6dCtQcStTN2k2OEZCbGVna3dNbGZjY0ZhNExQQWVCUkE3cmVkV2FvRmJBRFJhZmlBZFMzbUpyT2tNL21zVApzNkZBRXpxSHFGTkk1Y29BejZ2RmdFTVEyZS93Ly9xOTc5RjgwcmlKb1d0MHViR3ZqSys0NzRMWk8xR291NVB4ClAxV09rYWdCeVJiZnRDTUJxVWhsTzZCeWo3UDdCRkFTcGtQVkhMd3Y0bnFROFBJYTJzcFlnbmpIRHZwQWs5ekEKWWpYMEFHYWFjR0xGQ3EzcDBXbE5xUG9McForUWptbmQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpCd1BIN2ExRHJwQ3ljMHliTzhud013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU1qQTRNRFl6TjFvWERUSTNNRFl5TWpBNApNRFl6TjFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1rdkNsQmtkNUsrdEEvRzFqZzQKclpiME9PaVV2Q3J3K0w5N2ZxNyt3TDV5ejFFemhvb0VpUUNDL0lCdGxISlJveEhJeHk0K2toZlIvM2l1NkFwbApUWFJWakdqNlBVN3M5dzc1RzlMekJOeGtDdUNqbitBZjhWRFc0dTVseEV5THNTcXJBQ2tFVm5nbWh6N2pZMzQrCmRFV0VZSGdabC90MTU1cVNLMTlobXZZZUZwZzBzMGxrbDdHVzUxUTJxZzMxNWhPa1d5eEl6c0QwTzZYbEo3bk8KWEMxWFpsQlNpTDljVTQ5Z0VNZlh3alUyL0I0ZDJsN0JZUDhJeEJSUjN4Rk9hZk44UXpNQm1yaTZYd3F2UjZ2QQpnK1lEeUFhZkV3SzVwc2U0YjlLdnJkakNIcjh0bVRwNnZCRmhkbWF2Y0JrMnJBTnJzQk1DUGdIaGVIanRNSmtFCmtuMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVh4QzFsNDJUSDh2dwovRWlyQlRCb0QvNS95QzR3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpkRGw1TUdaR2U2em5xNzFpWFY3U2ZEVzZKRzUKdC81ZkIvVFZwZXJBdVhTTFB4aGUzanJBbVFvaVFXRzl4VDhUMWxMU3RqcHdTaGJacjVsa2NVTGRpRXprVW5zSwpOR2t1dk5kcDJyc2hOOCtObi9SZ0hrWmdWem9Rd1BuQlFkSnVPejFqUWFRdGs5YXRZR1VOdVNOT2FCWkV6cExlCkZmTE5qNzFFa29FbkRWYzhvd1o1UC93QUJKQVlSSllzelpsd3dCeXBWTUtFc2hyRnN5VStLdVd3RXI5d3pReXIKWDc0QjBPV00xb3RDemVOTUFZWHhIZXQ4UE9KVGUyUTQzbVZqbHlDVk5RWEZIZWpucSs2OUtxb2lrREEzUjhWRgpRUUluMDN3dFJkL3lDOGV6VWw0ZGdwblFLTFBxalVyTkZyZjZlMS9tcWRiZEVUV1k5djF6VkZqVXlnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVM4S1VHUjNrcjYwRDhiV09EaXRsdlE0NkpTOEt2RDR2M3QrcnY3QXZuTFBVVE9HCmlnU0pBSUw4Z0cyVWNsR2pFY2pITGo2U0Y5SC9lSzdvQ21WTmRGV01hUG85VHV6M0R2a2Iwdk1FM0dRSzRLT2YKNEIveFVOYmk3bVhFVEl1eEtxc0FLUVJXZUNhSFB1TmpmajUwUllSZ2VCbVgrM1hubXBJclgyR2E5aDRXbURTegpTV1NYc1piblZEYXFEZlhtRTZSYkxFak93UFE3cGVVbnVjNWNMVmRtVUZLSXYxeFRqMkFReDlmQ05UYjhIaDNhClhzRmcvd2pFRkZIZkVVNXA4M3hETXdHYXVMcGZDcTlIcThDRDVnUElCcDhUQXJtbXg3aHYwcSt0Mk1JZXZ5MloKT25xOEVXRjJacTl3R1Rhc0EydXdFd0krQWVGNGVPMHdtUVNTZlFJREFRQUJBb0lCQUdwN01rdFFrWlVpeUd6ZApRYjZxQ1A2dnJuc3pWZENva0EvUkRrRVM1dk1tRXlLWVVlbzA4a3BLQ2RqenByRkhFamMwZkcrMmdGNkpNRjB3CnZmSGFvajhqbEZodnNnbFhGSUJoU3QvQTdsNnp1S29qRUZod3I2bW93cDJKVVhkdUxFdzRDN0twOEJaUjFoMXIKL3RudnRseWc3dXBDS1pYWFZza1IrbERXZVUwdnVUVjQwaHI0clRISXRhcE12SEFJYmdWM2w5Z2xyRTNlSlRpaApUSnN5U1lTUEVhUENjeHhqejNXalhTNGJ4dmlid3hlYTZOZWdQUHY2aGpLRkFwZHBkU3RvcndCOXdmL2s2eWxMClF2YjhRV2ZSaTE4V205ZUVneldjT05wSVpXZGFRN29RcFRyMTRnMEpNUG8xNG1rcEY5cWpzaE5kRlpPZFdCM0IKT1Y3eGNpRUNnWUVBMlpWZzkzREV1T2lLWG5GeHJEcnFVWk1ocVBFQ0xlS3BaeGlUZC8wQjNlclQ2cDdHRE83TApBM2RmVkhSNjBzenI2WXhWZXNOdTNGN1grdlpCbFZSVVJiV2srdmFEeU1mam53UGxOSytxaHdwQVhBWmNkS3puClBRbkRRY0NaeXVyM2tpRG4zRUxvZCtneG9NSERZL1J6R1JBb2lMek1hWTh3ZHBzUmZEbG5sbVVDZ1lFQTdMUm4KYUxkWFRIWGI3TUY3UCtiY3ZwQWhTOWpFYzVuZHlUQWpuZktGVERVMXdvbkdsdkEra1BMSzh3L040QWdLb1UwdQoxS2QwZG4rTy9tRnhzVGJObXNqaStoWE1aUFZxVGNOclFma2gxSWd5WGtxSkc2NWNVTk5FMFRWSm9jY045ZEpoCndraW1mUGV4WDR5ZXF2MDdQc21VNzh5MjMrZUpaamMxZG5PZlhqa0NnWUJ2bll4dmduNjM2RHBLOW1EOG5BQmwKdGxjM0JlTTdUS0hnRENCaUZmem1MVGRtak9wRjZoMWtldEVCVHZ0T3RlWnpHUlVrYzZxa0MxYzZHeWRMaGtYdwp1SnlZVE9zUGpWSzcyTkMwZFVUQ0gwVWlyL1N2dVo2cGxoOSsxR0ZRVWJhTVZLcjhONnB2RUVLZEY2aTIxc2hRClhCU2ZDRkxIOTdkQnNJeUlzQjN1YlFLQmdRRE9PS296TURCTmZBMDc2cUUvWGhvSnFEWnFCeE80aDJBVHJPNEsKNk1TN1RVeG1EWFRJQWN6d3FhYXBOcWF0dlRQTnJoblR5WVNNekxzKzRwU1R5V1E5cXpFY29xc3RkaWJFVXpINgpDMXd1OXUyeStvc1RZOGduM3JpQThFVVRQZ0hxbmZ6dnNDM2tpRU92TkNyMFc2VW5JYWF4ZVJBR2FJbHJWVVF0Cnk3UVgrUUtCZ1FDQm12M2dIY0NkY2JDYmtYanpjdXB2VlZEL0JZQkloTGlrWG02a1NZZ3ZSbS9OTjBqQ0dtU3YKaHBLVW5ueCs0YXY5WjR4ZzZBeDg0bk8rSjhLZGE1bjE2Vk5rdzJ1MURPNjdQS3BEMTFQdzUzSjlBMG9RRVd5eQptY2tFY0VwSmtiT3I0bkVtc2RhY24zQ3U4cFhrN1RXdW1wWENMT1U1TW0wdmR2aFZnN3hXdWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  enable-envoy-config: "true"
  enable-ingress-controller: "true"
  enforce-ingress-https: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"
  ingress-lb-annotation-prefixes: "service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
  ingress-default-lb-mode: shared
  ingress-shared-lb-service-name: cilium-ingress

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "false"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
    cilium.io/ingress: "true"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    nodePort: 
  - name: https
    port: 443
    protocol: TCP
    nodePort: 
  type: LoadBalancer
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        appArmorProfile:
          type: Unconfined
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            memory: 1500Mi
          requests:
            cpu: 200m
            memory: 750Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        resources:
          limits:
            memory: 120Mi
          requests:
            cpu: 20m
            memory: 60Mi
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          resources:
            limits:
              cpu: 20m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 27Mi
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
subsets:
- addresses:
  - ip: "192.192.192.192"
  ports:
  - port: 9999
