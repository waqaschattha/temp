version: v1alpha1
debug: false
persist: true
machine:
  type: controlplane
  token: 2yu9ca.d34kp6far6d0fw7i
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFOc3lGemZ5WnhibHdkZS92azVnUTJNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQXpNak14TmpJME1EQmFGdzB6TkRBek1qRXhOakkwTURCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBVUhvN2N4SkpHRTByekU2QnI5SzlFbGxqQjJOQi83TVQvemt5CnIvMXI3NHFqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVaVZwODlKQyt4ekZHVzhhMgpOeDFvSk9qWFZSOHdCUVlESzJWd0EwRUEwdk10V0lpZ0cxeHZTOUpudk40bk9tSi9aVU42bFZ3SFVXcWVXR0dNClFQa3Z3Qi91T1E5R0VCQU9Pa213VFo1NTlGTGNEd1lRY1NFVUlveEd5SysvQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJRWsyS2ZRZDg0U0tXSHE2U2JaZ3gyd3NRR0lZUU1vSExjOFlGOHl0L1RrbAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
  certSANs: []
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.29.1
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    registerWithFQDN: true
    extraArgs:
      cloud-provider: external
      rotate-server-certificates: 'false'
    credentialProviderConfig:
      apiVersion: kubelet.config.k8s.io/v1
      kind: CredentialProviderConfig
      providers:
        - apiVersion: credentialprovider.kubelet.k8s.io/v1
          defaultCacheDuration: 12h
          matchImages:
            - '*.dkr.ecr.*.amazonaws.com'
            - '*.dkr.ecr.*.amazonaws.com.cn'
            - '*.dkr.ecr-fips.*.amazonaws.com'
            - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
            - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
          name: ecr-credential-provider    
  network:
    hostname: ip-10-10-128-10.us-west-2.compute.internal
  logging:
    destinations:
      - endpoint: tcp://fluent-bit.fluent.svc:12345/
        format: json_lines   
  files:
    - content: |
        [metrics]
          address = "0.0.0.0:11234"
      path: /etc/cri/conf.d/20-customization.part
      op: create   
  install:
    extraKernelArgs:
      - talos.logging.kernel=tcp://fluent-bit.fluent.svc:12345/
    disk: /dev/sda
    image: factory.talos.dev/installer/10e276a06c1f86b182757a962258ac00655d3425e5957f617bdc82f06894e39b:v1.6.7
    wipe: false
  features:
    rbac: true
    stableHostname: true
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
        enabled: true
        port: 7445
cluster:
  id: ypCo7FsxOYr2nkedixNe3y2mNiblHNSxOLNYNgfx79w=
  secret: i0mdUe3uJZ/hj7xzTmfoGLdkTMn/mvt0I8muXcNYHMg=
  controlPlane:
    endpoint: https://platform2-k8s-apiserver-lb-2a56f02f39e28b5a.elb.us-west-2.amazonaws.com:443
  clusterName: platform2-talos
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 172.16.0.0/16
    serviceSubnets:
      - 10.96.0.0/12
  token: 80o63x.w8ubq8r8gfjo0uro
  secretboxEncryptionSecret: SJKbwHG0gfUH/KZa9LHXDvar0T20mTLdZX4c9VJFupM=
  ca:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQUl3WFQvYU94VUxkUG9tQ0treVEzSzR3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOREF6TWpNeE5qSTBNREJhRncwek5EQXpNakV4TmpJMApNREJhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVFTa3ZiTjZsSFVhc1RtN25uN0hnS0FVVUFLdWt5QjF1c2ZQQmoxc1J1dzM5UVB3OWVETlEwaUhmc3kKN1ZCQi91NkVKOTNGOGJCSzdhVlFqSWUxempZdm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGS1V1azZaZURuNERDYlNDeTZkUHkvUXFtSTUxTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUdEOWloeVYKUGhqUy9ZU3krWjgyRmdKc2I5OVB4d3FLaUpRU3IrV3IzcDg5QWlFQXg2UHpsU1lGeGhkTmFYTFZSYzJnclF6Ygo5dWZyaUtyV1ZaQzcrSVdKZ3lRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtoeDBrY1RzR1ZZUS9pcUpFTUROVXpkd2Fmb1dHaWNVYUxxcTRlY0Z5aUJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRXBMMnplcFIxR3JFNXU1NSt4NENnRkZBQ3JwTWdkYnJIendZOWJFYnNOL1VEOFBYZ3pVTgpJaDM3TXUxUVFmN3VoQ2ZkeGZHd1N1MmxVSXlIdGM0Mkx3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  aggregatorCA:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYekNDQVFXZ0F3SUJBZ0lRWVEvNWw2VTh3U2Z4STRlSHh6REp1REFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1ETXlNekUyTWpRd01Gb1hEVE0wTURNeU1URTJNalF3TUZvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTUc2eGZZMUl4b21JYWYwUWhDVjFFcFdjR1JFaVlQNUxoTy91ZTZXazFZTTV4OU1NcW9YCkFKT2ZCSy9QV3EwUXRlWnh4c1BMb0tZUmpOQU1lYzluN0tLallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVKSkNCRThZUC9FdEVuMXZiVHZHTWhBeGtNQUl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloCkFPS2VZc21wMURwZGpQdmJvVkx3VFdERkJSU1NsNTVtNXdYMThwOVY4UVBrQWlBTEk5Y05OZzZ5eHo1eURDeHgKZGJRSmtlRHo2ajk0NWlEZVF2RWdYV2xtSmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdmcmU2VkpyRjRscExmKzMrVkU4ei8wazhVNHR2VmZaUUtZTzVoTVVDQm1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFd2JyRjlqVWpHaVlocC9SQ0VKWFVTbFp3WkVTSmcva3VFNys1N3BhVFZnem5IMHd5cWhjQQprNThFcjg5YXJSQzE1bkhHdzh1Z3BoR00wQXg1ejJmc29nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  serviceAccount:
    key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUc0bS9Bd2xkQnNHaVJiRE5aaXViTzVSeW9sdTIzY0hkRW01UXRodTZodUVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZHBxcG9LSFdVSkUwU1hZWnp0RU9QdWR0L28zdWtnZTM3OUVMUWd1K245S1drU2tjejF3Vgo2L1FqbjFWMnc5WXRsL040VUZTTVlyZWExRXdPTkRMMlpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.29.1
    certSANs:
      - platform2-k8s-apiserver-lb-2a56f02f39e28b5a.elb.us-west-2.amazonaws.com
    disablePodSecurityPolicy: true
    admissionControl:
      - name: PodSecurity
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1alpha1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.29.1
  proxy:
    disabled: true
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.29.1
    extraArgs:
      bind-address: 0.0.0.0    
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: false
      service:
        disabled: true
  etcd:
    ca:
      crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUlvbGpIZURUQU80cW5Oekd0RHRTT1V3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TkRBek1qTXhOakkwTURCYUZ3MHpOREF6TWpFeE5qSTBNREJhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFUMjRKL0haWGNFClJMenFmT3c2TWxvRk1VZmJyRWEyY3FVNU9NWU1PZHM2WWQzT1Q3S0N0b3FoMitDak1zVnVRem54Wmk2VGlGdzIKMUVPRUhlQWZoWVpDbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9pSUw5YzNJQU1tCkM1KzA1bVJ6OUswVURnSWhNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJQjlPTlQ1SFhJM09LUVpZVW5DYmJ3bksKczdhQ3hMbHIvbC93MjdzOG9uQUxBaUVBbU1QdlpjczdLY0U2Q1pZN0h0aHlCWm9oRUxxM1JvN2dPSXZIMytrWAplMlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU45RlRwMFRWRmgyNzU0UnBHbVRHNTdTbGdsbWFSSTR2eS9meFd2cVJlRGlvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOXVDZngyVjNCRVM4Nm56c09qSmFCVEZIMjZ4R3RuS2xPVGpHRERuYk9tSGR6ayt5Z3JhSwpvZHZnb3pMRmJrTTU4V1l1azRoY050UkRoQjNnSDRXR1FnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  externalCloudProvider:
    enabled: true
  extraManifests:
    - https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.0/components.yaml  
  allowSchedulingOnControlPlanes: true
  inlineManifests:
    - name: cilium-cni
      contents: |-
        ---
        # Source: cilium/templates/cilium-secrets-namespace.yaml
        apiVersion: v1
        kind: Namespace
        metadata:
          name: "cilium-secrets"
        ---
        # Source: cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-relay/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-relay"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTXNKblZKT0JmWVJzR1ovZXNXNktaREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRBME1ESTFNVFU1V2hjTk1qY3dOREEwTURJMQpNVFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ25YL2toeVdoUkc2bk03ck9uOVNhUjBsa1NWekw0cVM4eW4rSytzSnZKQnRrckVhVEEKODhWaGpIVzYrN1BEaksrUEZ4QUtvSGFqUThvbENDeTJLcCtzRG9UNEFqaVBUNXF0Y1IvZkFjWXU3NGFXYjRpVgpBMFRieGNJV1BOdzRFNlNQMUo0c3AxTzlLSFlQaXdBdkREOTR5dGl6VDVqVjZicHhlNkxmYitkMi92N2tZZlF3CjB2TGxYUllCMlRVMGRjUk5rTGVBVEVaY0pPRGxkTm9LRGlZWUw2cXVtVHFoSmlid0crSTRxdjFlV05wRmpkRTUKci96eUE2L1poTmtWUDIyNTZvVFRGQzVLLzZ6T2pyZXk1b1IxWHFUUWNPVmZGRDlXQ2JNdlhHRWFpZlJHNm1LMgpKK3VFNXVwanp5WUdaRWlGeFBXV2hHcFlpemFvL0lQc1hoMEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVBQlVvMGkrNkR0ZnJKMTJ3b05WNXFOUGJOK1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIQ0E1N3BQMUpQTGFrUEhuNzBoaDR4cTdiMEVGNFhrMUk1TjlwVEF5aDNHY0M4SGFuSFdnVU52ClRBUkFYYmFSeFcwaENKZWRLWG1OZTdQQ1RiYjlwTFJPRkVERWxjMzhKVVRmcVluZ0ZRYkxwYll5cUQzTVBWREcKTUxGNjBlZ0JYVCtwWW9CTTNQYTMxeEJnb2syUGFtdS9PaHlwUGVVUHRjaHovNXp2aGQ4dEhZU2puK29zNEw2Rgp2NXJkZTBwVkJOY0l1UlZHNDBEMm41UGEzTVJuQWJpUHhaQ0pnbGdpTkhPT0k1UGRpbSs4dU1NNDlTaHRldWZRCjlxZHhYbnZkM2F6S0huNWxzcWRoTUhrWkIxQ1A2Q3JpS2E3TzBjNS9LdlB1UXFtWVNYT09iWS8yTCsvaEFOUTkKcnArMVQyaHh4WUY4M3pFbFA0Ly9LL24wbUlLWHNTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcDEvNUljbG9VUnVwek82enAvVW1rZEpaRWxjeStLa3ZNcC9pdnJDYnlRYlpLeEdrCndQUEZZWXgxdXZ1enc0eXZqeGNRQ3FCMm8wUEtKUWdzdGlxZnJBNkUrQUk0ajArYXJYRWYzd0hHTHUrR2xtK0kKbFFORTI4WENGanpjT0JPa2o5U2VMS2RUdlNoMkQ0c0FMd3cvZU1yWXMwK1kxZW02Y1h1aTMyL25kdjcrNUdIMApNTkx5NVYwV0FkazFOSFhFVFpDM2dFeEdYQ1RnNVhUYUNnNG1HQytxcnBrNm9TWW04QnZpT0tyOVhsamFSWTNSCk9hLzg4Z092MllUWkZUOXR1ZXFFMHhRdVN2K3N6bzYzc3VhRWRWNmswSERsWHhRL1ZnbXpMMXhoR29uMFJ1cGkKdGlmcmhPYnFZODhtQm1SSWhjVDFsb1JxV0lzMnFQeUQ3RjRkQlFJREFRQUJBb0lCQUNudFo3b24rdUsrZkVXaQowZ3hUNCtxSmQ5aVpVV0pxOXpER1RvV1lOaDRnZ2d4QTZqV1BtelU1ZTFCd3R2SllicTM0aUFNeGVTYWkxNk41CkxjSWdZVWszaGVXZW9NNTlrWEM3TXRHcFh4em8wWjBqcVdJeXBIQXRWTlkvUHFjcGZJS3ZMMFJlVWlMRFhQZTkKeVRqLzUzSjUxZGp0S29zRGRybnd6N2NMRUQrRmIxbmNtQmUrVXgycnJiMjhqam1va3JVRzJOWTMxVFNpdVZTbwp6SWp6RjZuK09ZSTBFcCtPNjZpNHl0OXVCZEhscDVJWXUvN1pvaWliWVh2czZ1ckxqTEJTZUFERTRramplNzFCCnh3bTlvbWtjN1BMVnJDZElxRnJXYjN0djZ1Yy8xRmpoc1dMRDdTUDV1VTZ1a21nL0M0bS9mNTBpdzYxRlM5OHkKWnBaYjlBRUNnWUVBeTUwQ2labWF4QVNHd2V2NXd0WmtkWU4vWVBRL1hkYzd1Umc1ZXppN1lLUkdsOUdDMjhBSgpwTHdSM2pWZWhKem5oNldGK256UmlXcytSNmpUcHlCT3dCNGl1Q1hYLzZhMmVJRitHNlJMOXR0VlBGUDdNNjBuCkw2UTJRajR6Y0dpeTFoZUdqc01WRjNScGIwdnY5dUh1VlRMdG1ieGFFazhsWXZ2Q1ZxTk1uUUVDZ1lFQTBuQWUKb0M0OHBTUGdsU2FwbWtpaEt5WUxzZ0NpSGVPRXA4RzR5VjlqQXFBR3hZcytQd01FMllod3NMRmZJaUp0YXNTVAp4amNNNzRYZnRrTTJDaGFsYm5qWkxtbmpYRG14R0RpVkdvOU5nTG12dm5rVTg2QWJBWE13azZQSFBiVjJVYlg2ClJVN0tTZGduRW9RcjAwU1BsdmRLYXhQSEgvSXQ1L0RPUGMyRERBVUNnWUJrSWpVclFuVlFUUUdRd09JMXBZWUcKSE1NNkJTUmNuQXJzL2pMV25KSFo5ekFZWFpyRFEyLzZxZHNIc3F0bkFGc0U1S3c5QWNGeW1XRXBrS2QyRzNkZgpGL0x2S1AxTzVzZjUvNFRyUnlOc3BYVUhsQzJIdm5IMUJnY0JFT0h2T0M0ckI2ck83cldpc1VkZ3lyR2Fjb1hwCk5JQ1JDSVlyVnUwRi90WVdFWDBPQVFLQmdGb3NoME1XYlJCS3JtcmJWV1B5YVhXbTZPNE96V2xIWEVuU2ZrOTAKRzJZOWtvbEY0SmQ1d0xOQ2Z4K0g4ZjhiaDQxdnpPN3NHaFB0WnU2Z0lHRDBVVkZrWVpRODladEljWFd5a1ZuLwpQRFBEM2VZZDFuZUxET2R6Sjhhc01LMWx1OXpKd1FPLy9uamtNZUlDVnhGQjJOSFZCOE9ZaHdST2I1TnJJY1ZqCjhock5Bb0dCQUw3L3ExWDJ6N0ViR0x2WXkrTHNXbDRIeXBudGxBaXRSV1dheEN4b0pyUTdYM1JQbzZZeEZkeFUKTnFTSEk1ZHRpNFRmK2grNmd4Rks2UzZtQ3YvT2UrQjYxYzBLWTF6Vy9QcjdMRmE2S1VvbDBKS1VoMExkVDhTTQpuM1NEaTF5c25ESlNERVF6RnhPOVRMQlNuWmJ0TmdxbldLL3RXUXhsUXdFbUR0MDluSXBzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTXNKblZKT0JmWVJzR1ovZXNXNktaREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRBME1ESTFNVFU1V2hjTk1qY3dOREEwTURJMQpNVFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ25YL2toeVdoUkc2bk03ck9uOVNhUjBsa1NWekw0cVM4eW4rSytzSnZKQnRrckVhVEEKODhWaGpIVzYrN1BEaksrUEZ4QUtvSGFqUThvbENDeTJLcCtzRG9UNEFqaVBUNXF0Y1IvZkFjWXU3NGFXYjRpVgpBMFRieGNJV1BOdzRFNlNQMUo0c3AxTzlLSFlQaXdBdkREOTR5dGl6VDVqVjZicHhlNkxmYitkMi92N2tZZlF3CjB2TGxYUllCMlRVMGRjUk5rTGVBVEVaY0pPRGxkTm9LRGlZWUw2cXVtVHFoSmlid0crSTRxdjFlV05wRmpkRTUKci96eUE2L1poTmtWUDIyNTZvVFRGQzVLLzZ6T2pyZXk1b1IxWHFUUWNPVmZGRDlXQ2JNdlhHRWFpZlJHNm1LMgpKK3VFNXVwanp5WUdaRWlGeFBXV2hHcFlpemFvL0lQc1hoMEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVBQlVvMGkrNkR0ZnJKMTJ3b05WNXFOUGJOK1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIQ0E1N3BQMUpQTGFrUEhuNzBoaDR4cTdiMEVGNFhrMUk1TjlwVEF5aDNHY0M4SGFuSFdnVU52ClRBUkFYYmFSeFcwaENKZWRLWG1OZTdQQ1RiYjlwTFJPRkVERWxjMzhKVVRmcVluZ0ZRYkxwYll5cUQzTVBWREcKTUxGNjBlZ0JYVCtwWW9CTTNQYTMxeEJnb2syUGFtdS9PaHlwUGVVUHRjaHovNXp2aGQ4dEhZU2puK29zNEw2Rgp2NXJkZTBwVkJOY0l1UlZHNDBEMm41UGEzTVJuQWJpUHhaQ0pnbGdpTkhPT0k1UGRpbSs4dU1NNDlTaHRldWZRCjlxZHhYbnZkM2F6S0huNWxzcWRoTUhrWkIxQ1A2Q3JpS2E3TzBjNS9LdlB1UXFtWVNYT09iWS8yTCsvaEFOUTkKcnArMVQyaHh4WUY4M3pFbFA0Ly9LL24wbUlLWHNTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRY1ZZaTJsZEhRUzREaEVkK0E2QmJ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRBME1ESTFNVFU1V2hjTk1qY3dOREEwTURJMQpNVFU1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMzVLVzBBTFM2cDArSW15eUViZDFoM0NKdnVDNWgKL1o1cHcwaGlNYnY2VnBpQ1hzci8vVnpOTDlxNDBhb0FHVzRaT0tMeWVQeGNiVEhscEtCUHl2TldsVUxXb1M4RgptY0JLWXlSRVBOUktPckhGMVI0MzNON1MwbzhEYy9Ubkg0OTE0SlVFVjgxYjRWLyt1VkgraklDQUJ6cVgzdFp3Cm1UbGl4VmVDdllOQU56RmVBOFQwQXljVkR0YUhTTDY2U3dEZ1o1c0NkUjdCQUNXb0dyVGVpaG1ZQTAzZkNDSEMKeUJaclhKMWs4RWdFZ0YrNGhIelF1Sk5TeGlJK1oxVXE4ZGtEb2NDY1hRc011c1U3Q3UxdDM1V3lIc0N1L2l4Uwo2Y2RvVGVJUFlqV1QrZGRkclZ4QnpiQTRtTUNlNFVKdjhJL054TldEVXFHZ2Ewa2tKZFFCREpPTEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBQVZLTkl2dWc3WDZ5ZGRzS0RWZWFqVAoyemZsTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYR2kwQTVaT1R5c24zY25oMmZFRjdGWGlYcnkzT1MwSkdyWmptL01aSFR5alZ2bGcKUUZScldZWU51cnVBMW9LVVhVc1hSN1k0MlhHd3pHejJGdGF5c3BnWGNyOE41Q01GaTdHb0ZjL1BQd3ZCQnZLcwpCMUVranA1M1dtZ2dyNUVldVo1blVWcnBlNFNmcnAwd3BEL0JaWm9VNkowdmNITFFmcTFQcjhhdWhFUjlBTXB3ClI5ZUlhTlVtM0oxQSszVFhrZWNlZjFuUTFKcThzT0szanJ1aUE5RmNqN0QyM09FQWZSUjFFbjY2cThveVUrdXIKSFlOR3hLbFZhbytycHhLTkIzbFBWeVNRWUtiNUtKaGk0K2ZoUHVVVk5veWVPMmJRZUw0QXd1S2J3cTFBYjFncQp5SGVZZGZWYkd2Z0ZNY1RUdm5UWjlyTFR2RVhpTVpVTHVqempqZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdCtTbHRBQzB1cWRQaUpzc2hHM2RZZHdpYjdndVlmMmVhY05JWWpHNytsYVlnbDdLCi8vMWN6Uy9hdU5HcUFCbHVHVGlpOG5qOFhHMHg1YVNnVDhyelZwVkMxcUV2QlpuQVNtTWtSRHpVU2pxeHhkVWUKTjl6ZTB0S1BBM1AwNXgrUGRlQ1ZCRmZOVytGZi9ybFIvb3lBZ0FjNmw5N1djSms1WXNWWGdyMkRRRGN4WGdQRQo5QU1uRlE3V2gwaSt1a3NBNEdlYkFuVWV3UUFscUJxMDNvb1ptQU5OM3dnaHdzZ1dhMXlkWlBCSUJJQmZ1SVI4CjBMaVRVc1lpUG1kVkt2SFpBNkhBbkYwTERMckZPd3J0YmQrVnNoN0FydjRzVXVuSGFFM2lEMkkxay9uWFhhMWMKUWMyd09KakFudUZDYi9DUHpjVFZnMUtob0d0SkpDWFVBUXlUaXdJREFRQUJBb0lCQUhsU0V2UkhodlNoenpuNwp6Z25zaGFLN1hjakJCWERHcHcxMXRicDZ2MTZ3Wk51VitHMmMxTzNXQllIcmFURzVsVVowZENSdUoyZys3aTFvClNBOThnTC85cDJQOFlRNWIybDM1UElMOGNyNHFMUUNzMHN2ZUh1K04xS1pkaVJRMllTcE9xV0Y5SDlIZlJickMKdnRLbUZWemg2QWtzRGVPcFl3L0R6REZJSUdCckt2ZGxpbXFTdkFqakRQWEg0SHI4S0lhR1FNak1MYzIycVFDQQppQkpxeWdNVmIyQmZjUTM0Wk02YzNyTmJIY2F4dDJCOE9la2YvRldIVTBjYW1vbFhxVFVJK0xra3lIMEZwTFpCCjA3aDZGTU95ZmJiTXVHenl0WGFzRHhZenJIc1J0RHRGVHIyMG9lZElmRE9uVisrRDVObERxS3hwNGd5OTF3bkIKdHNaNHc0a0NnWUVBM283S0VydDQyUkcrTk5NTWg0MTBmcXlZb2VuOFpjSFpuZ1JCcmh4Z3VmWkxsdUVuQmdrNQpRcFJlY2ErUWdXdm02ZEYyeU5mZDRJdXo2QzRBWVZCOXp2QW1nZi82TXBvdC81M0tqN1NMR1FsWGlNRjhLQ1VPCnVuYnd2bmwreHp4VGdQNE9DRy8wY3B2UFBiT2dvU2l6K0w5UjYvNFY2L3ordEFvcGlObzUxZWNDZ1lFQTA0YUkKTTYrRFZSRWlQSnRBQzNaWTlDL0hGeTNkSklncGloRU9CVVJGOGUvUkplaUJrUjE4eWJpVjAxNDFXSnlGcGlIMAozK0VLamN5QXJQTWwzZUdnME1hZkt2YjliZW9vQXl5SjhkZ2JtUk1sRkUvbDU5NFlWRGRBSU5Tc3NFMWV2QmFKCnZ1OFBWSHF5MEZ0ajVhUXI0cHNKWEluZXNJVGhEWWk1aUdQVUdMMENnWUVBcVZFU2xRdkJWY3QwM0hWUHkvU24KRXhRMkRzQ1h2OGFweTlqTEt5MzF2S1NQUDF0TnQvN2ViRE82WWwxQjMrUjZTWnFNOXlHYmNKQjRMNFNIejRGUQpKVlo0eFdBOE5iRXNtNUt0SDRVb2FjUzhycE1jNU9IRWdjR3BTQS9nanF6cmpuQTV0dHVOcW4rMU8rampwSmYxCnk2R3FMcE1nbEdmbVVveUVxdFB6T2pNQ2dZRUF0YTFLRktKOStiVnlvMzF3djZlUmRZSUh6TWZPdGM3aFpyMkoKUGtyS2pLYy9Dd0V0TDllVTA2bGZ2aUNmVHhGNDFSMDdOb01TVG9KRVRzZTBVV08yZlRycmdMcU5KemZEMEI0VQpDUTFsZnM5cnZJdDNXdlJ1RHY4NWJEbGViVHEyMEhQSE1hQWdtWjJkTWNvYy9pTklzaVFaSVVzbFlwVnV1dklnCjhKMVZrVDBDZ1lFQXBBV0s3SHFhbU53eGZCQkJqc0VtUm1xalJjdzRKUEN6M1diUVFtSGdtcjk4SFlqMmxiZFkKVCtIVnp0TkI5QVEwSXN1dzBqa3RqUldOdlZPUWZIWE96K3RMSjZYa1U0REVrdDg1MnVHMU94MkxuK3R5THU5LwpFd1hqRU0xMTFkMlRYL3FrMy9lVmhRcTRocEdTbWsyRldET3dMVGZGSjNRV1BSd2k1TWNyK2pBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        ---
        # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTXNKblZKT0JmWVJzR1ovZXNXNktaREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRBME1ESTFNVFU1V2hjTk1qY3dOREEwTURJMQpNVFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ25YL2toeVdoUkc2bk03ck9uOVNhUjBsa1NWekw0cVM4eW4rSytzSnZKQnRrckVhVEEKODhWaGpIVzYrN1BEaksrUEZ4QUtvSGFqUThvbENDeTJLcCtzRG9UNEFqaVBUNXF0Y1IvZkFjWXU3NGFXYjRpVgpBMFRieGNJV1BOdzRFNlNQMUo0c3AxTzlLSFlQaXdBdkREOTR5dGl6VDVqVjZicHhlNkxmYitkMi92N2tZZlF3CjB2TGxYUllCMlRVMGRjUk5rTGVBVEVaY0pPRGxkTm9LRGlZWUw2cXVtVHFoSmlid0crSTRxdjFlV05wRmpkRTUKci96eUE2L1poTmtWUDIyNTZvVFRGQzVLLzZ6T2pyZXk1b1IxWHFUUWNPVmZGRDlXQ2JNdlhHRWFpZlJHNm1LMgpKK3VFNXVwanp5WUdaRWlGeFBXV2hHcFlpemFvL0lQc1hoMEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVBQlVvMGkrNkR0ZnJKMTJ3b05WNXFOUGJOK1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIQ0E1N3BQMUpQTGFrUEhuNzBoaDR4cTdiMEVGNFhrMUk1TjlwVEF5aDNHY0M4SGFuSFdnVU52ClRBUkFYYmFSeFcwaENKZWRLWG1OZTdQQ1RiYjlwTFJPRkVERWxjMzhKVVRmcVluZ0ZRYkxwYll5cUQzTVBWREcKTUxGNjBlZ0JYVCtwWW9CTTNQYTMxeEJnb2syUGFtdS9PaHlwUGVVUHRjaHovNXp2aGQ4dEhZU2puK29zNEw2Rgp2NXJkZTBwVkJOY0l1UlZHNDBEMm41UGEzTVJuQWJpUHhaQ0pnbGdpTkhPT0k1UGRpbSs4dU1NNDlTaHRldWZRCjlxZHhYbnZkM2F6S0huNWxzcWRoTUhrWkIxQ1A2Q3JpS2E3TzBjNS9LdlB1UXFtWVNYT09iWS8yTCsvaEFOUTkKcnArMVQyaHh4WUY4M3pFbFA0Ly9LL24wbUlLWHNTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUGNnL1FVeVYrcFd5c2tPdTZUSkkzekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRBME1ESTFNVFU1V2hjTk1qY3dOREEwTURJMQpNVFU1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNzMrSU1TUHpqQXZrVDZHWStjajQKMHZBdnBPM1ZTRnUyMTlwOGR2UW93MEo2L0paNlZzbDBDNUZxTUNleThpZ0ZJTENKUEZQaWIreEJ5SndqU1RIWApFalR2NFFTYnYrQWxyTHlGSGczOGc4alV0TGY5SEkrNGV2MHZBdCtWY2g2RHcvNS83eUhrSUs5OUl3QnJxZUJNCld0Q3lJYlhLL2pBNGJKWVlZdEF0Q0lYMFpRU0d2Y2VReUl3RUY4REp2Z292TEdxaEkwZ05JdlRVRC9oclFiOVIKSks5aGlOTGhaaWgwNlRhWjBncTVUeEllOEtFWjB1Ylg4cTE2Y3dyNkVxTGh4WUVvV3poN3E5VVlkdWZNUUZzaApQNFlVUFVST29LTWtKNFlJZzh0L2RPSk5jL0hib25yeEM2ZWZGbEVXMDlVV2FQbkZGc0MwekZTZFdwa2tzNXh4CjNRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRQUZTalNMN29PMStzbgpYYkNnMVhtbzA5czM1VEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCNWZmckh6NEExWjBOU3RHMzVQSVFoQ0VFVkJRamEKdDF4cGpvclVGNXBocGRBQXBlYUZqM2JHemtRdDRCcVB1SnhZaERvQlpURndVeWtzUXpTT0o0RnFVcTBaTjg0agpWTHZOUW9Mcko2TVdVRW5vZmNpMEx4YXMwQ3hSUktxc1NPOERyeXpXV3Z4SkhHVzd3OXVieVFhdElIU1F6d3VhCmxUc3R3U1dHTWlVb3ZWKzRQdVliaVE5eHBFV2ZXV2lZVFJueHQyMU9VL1pkdEpxUXhmaHZGUWcrV1o1eG4yV0YKTXc0cTJCdGdKZXZ0ZzlNT1hLOW4zaDV4SW93bjVjNi9UUnd2ajNRN2tTZGxoY0hIRWh4bWFwbkFKaWZRcTMycApURTR6TE80NmVHeFpUanMxTlU3Mjhhb0w5NzZXbGVkQ2s2bWczWVRUeWp4QVpVOFE3VkhjdklJagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNzMrSU1TUHpqQXZrVDZHWStjajQwdkF2cE8zVlNGdTIxOXA4ZHZRb3cwSjYvSlo2ClZzbDBDNUZxTUNleThpZ0ZJTENKUEZQaWIreEJ5SndqU1RIWEVqVHY0UVNiditBbHJMeUZIZzM4ZzhqVXRMZjkKSEkrNGV2MHZBdCtWY2g2RHcvNS83eUhrSUs5OUl3QnJxZUJNV3RDeUliWEsvakE0YkpZWVl0QXRDSVgwWlFTRwp2Y2VReUl3RUY4REp2Z292TEdxaEkwZ05JdlRVRC9oclFiOVJKSzloaU5MaFppaDA2VGFaMGdxNVR4SWU4S0VaCjB1Ylg4cTE2Y3dyNkVxTGh4WUVvV3poN3E5VVlkdWZNUUZzaFA0WVVQVVJPb0tNa0o0WUlnOHQvZE9KTmMvSGIKb25yeEM2ZWZGbEVXMDlVV2FQbkZGc0MwekZTZFdwa2tzNXh4M1FJREFRQUJBb0lCQUZ5bGNRSFJibjFXZkZOeApwOE80d3NpV3NWZVR5VlhjWkxiTGhpcGQrUWJQeU5POVFrWWdXQXZCak5wa0FRMDcvZi9QU3NkVGk5elFBQUtpCm8rUEVxL1lYRkZSdmUvQ1Z2UDA5VUNGNE41NmpLZVZlNTBNTk5jZ2QrUG1ibEN3NU1hKzMyN1dkM3FubU9QbzUKUjJ6SG44SGh5WWJRMUYzUU9ZT0g3SmNOQU42eWMyMVhOdU9QVkRSM2x4VmZkMGthcnNzSWJVWjQ5TU5PN0YwMwp4Y1ZpVjhPUVQ1dWpxRFFVdlR2UmtES24wUW93NnBHWUlreHUrODEraWdJN2dGa3RmM2U5bFY2bExhU3JHVHdWClM4U0VMQWg3eWw3MWdQdUIyM3dhWUJyQVJjM1FMMVRtbHpXL1BwZkpRMjEwSk95djRrRUpsNkUybTFydXJWSUsKSWFYZW53RUNnWUVBOXJWTDFYMTJpVTdiNStNNVBFS25TWE00NE5CRGVrY1VoRXNyTSsvZzZNVlV6OGFxY2h6aQpaalpnZkVaVjFtQzVwa2cxNGpwdTdYWGhwM0thRk5naHZ4ajZHL29Ebm1ydzBldk5FZHdJY2lWKzQwbENTQXlSCnFzT1ByaktRUVZjOEUzYWFXNnc4aklYMzlBZ1Fsa3dYeEZSRzJJNFNzd3NWbXU4TVhtL0thL2tDZ1lFQStJUzMKN0RITExNSXhQdVEvQ3l5RnkrVmo2Z1RyUVl4dUFlN3RxUmNqZ1crcnpmdDdDVmRjVnhMNjFMZlFVTEc5S0wwUwpaZFovR20xWDAxRXEvZy8wS2MrSlFqZ1ArKzZseFdGYXlrbXFVOW5qZE4wUklmUVhEdkNMcldRTXlYd3ZiSmJFCjFvUmJHNEVwOE1pejFlaTErdWc2eXlSeVF5eFg0MC9FSjNKRWhnVUNnWUFONFI4MkVJdmxwNmtaZjZBTnN0WkUKZkpYN2w5dmorakcrUzVoUG9MUXZoRUtFT2ZJRzMzY2hOdmZ3cGVoWVdqSzNseUpvNnM2b3oxUDFucTNxZEVwWgp2T2I5UWZDSUxnNEVVVmJGSlhMWU1TSFZXWjYvL08wSkJWMkUrRlZEUjh3YWNEYTQ1NVMwZHlqKzhxRTBRMjJtCjN2THBaZnpKVTl0UVR4aU1DNUFBeVFLQmdRQ1hzMFFtUE5yK0xtZ3JNTjYrN21XWjZpUE1aVVpLRS9QTzRFOVkKeVZRV0hkbXMraGJIdy9rTStmdjlQMXM4OXRJMS9Qd3ZCL2s4WTRTWjdORW1sd3gvUFQxWEc2dStLSll1WDFneApaVGhBeVIrTVphbWdwVVF5RFdubDVNM2RiQjN5MWpHL2xMbWNsNExIaFd3cFprMDNwT3pHdGkrOWkyTDIwZWsxCi93MlBGUUtCZ0NST2lNL3VIK2Q3QkdxUEVnLzJZSS95ZUVVczRNTHFVa0dQek1JRmZvaGtrMTY4SnVUUE9udjgKV0ZKUXIrTUpacTlDNVBqUGZhWWNJeUxYQmVMVEFva2FIUDNpYW1sUzEwNi9GbXZZTk9MZUEwVEwxZE9KcEdhTApnK1ZWakdvUUFtWE5zWmJrdnloOUYxcm1vQ25neFVkM1QzRWl3TEJ4SkxqUmFVbzJkWXMrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:

          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
          skip-cnp-status-startup-clean: "false"

          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"
          # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
          # field is not set.
          proxy-prometheus-port: "9964"
          enable-envoy-config: "true"
          enable-ingress-controller: "true"
          enforce-ingress-https: "true"
          enable-ingress-proxy-protocol: "false"
          enable-ingress-secrets-sync: "true"
          ingress-secrets-namespace: "cilium-secrets"
          ingress-lb-annotation-prefixes: "service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
          ingress-default-lb-mode: shared
          ingress-shared-lb-service-name: cilium-ingress
          enable-gateway-api: "true"
          enable-gateway-api-secrets-sync: "true"
          gateway-api-secrets-namespace: "cilium-secrets"

          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"

          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "false"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium

          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"

          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"

          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"

          # Regular expression matching compatible Istio sidecar istio-proxy
          # container image names
          sidecar-istio-proxy-image: "cilium/istio_proxy"

          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"

          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          # Default case
          routing-mode: "tunnel"
          tunnel-protocol: "vxlan"
          service-no-backend-response: "reject"


          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "true"

          enable-ipv4-masquerade: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-masquerade-to-route-source: "false"

          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"

          auto-direct-node-routes: "false"
          enable-local-redirect-policy: "false"

          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          enable-health-check-nodeport: "true"
          enable-health-check-loadbalancer-ip: "false"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          bpf-lb-acceleration: "disabled"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          enable-k8s-networkpolicy: "true"
          # Tell the agent to generate and write a CNI configuration file
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
          cni-exclusive: "true"
          cni-log-file: "/var/run/cilium/cilium-cni.log"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-remote-node-identity: "true"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          hubble-export-file-max-size-mb: "10"
          hubble-export-file-max-backups: "5"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          ipam-cilium-node-update-rate: "15s"
          egress-gateway-reconciliation-trigger-interval: "1s"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          enable-bgp-control-plane: "false"
          procfs: "/host/proc"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"

          k8s-client-qps: "5"
          k8s-client-burst: "10"
          remove-cilium-node-taints: "true"
          set-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          # default DNS proxy to transparent mode in non-chaining modes
          dnsproxy-enable-transparent-mode: "true"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

          mesh-auth-enabled: "true"
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          mesh-auth-gc-interval: "5m0s"

          proxy-connect-timeout: "2"
          proxy-max-requests-per-connection: "0"
          proxy-max-connection-duration-seconds: "0"

          external-envoy-proxy: "false"
          max-connected-clusters: "255"

        # Extra config allows adding arbitrary properties to the cilium config.
        # By putting it at the end of the ConfigMap, it's also possible to override existing properties.
        ---
        # Source: cilium/templates/hubble-relay/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        data:
          config.yaml: |
            cluster-name: default
            peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
            listen-address: :4245
            gops: true
            gops-port: "9893"
            dial-timeout: 
            retry-timeout: 
            sort-buffer-len-max: 
            sort-buffer-drain-timeout: 
            tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
            tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
            tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
            disable-server-tls: true
        ---
        # Source: cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        # Source: cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
          - patch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
            - cilium.io
          resources:
            - ciliumpodippools
          verbs:
            - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          - ingressclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses/status # To update ingress status with load balancer IP.
          verbs:
          - update
        - apiGroups:
          - gateway.networking.k8s.io
          resources:
          - gatewayclasses
          - gateways
          - tlsroutes
          - httproutes
          - grpcroutes
          - referencegrants
          - referencepolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - gateway.networking.k8s.io
          resources:
          - gatewayclasses/status
          - gateways/status
          - httproutes/status
          - grpcroutes/status
          - tlsroutes/status
          verbs:
          - update
          - patch
        ---
        # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-ingress-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-gateway-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-operator/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-operator-ingress-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - update
          - patch
        ---
        # Source: cilium/templates/cilium-operator/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-operator-gateway-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - update
          - patch
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-ingress-secrets
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-gateway-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-gateway-secrets
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-operator-ingress-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-operator-ingress-secrets
        subjects:
          - kind: ServiceAccount
            name: "cilium-operator"
            namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-operator-gateway-secrets
          namespace: "cilium-secrets"
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-operator-gateway-secrets
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ingress-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: cilium-ingress
          namespace: kube-system
          labels:
            cilium.io/ingress: "true"
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
        spec:
          ports:
          - name: http
            port: 80
            protocol: TCP
            nodePort: 
          - name: https
            port: 443
            protocol: TCP
            nodePort: 
          type: LoadBalancer
        ---
        # Source: cilium/templates/hubble-relay/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-relay
          ports:
          - protocol: TCP
            port: 80
            targetPort: 4245
        ---
        # Source: cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
                # Set app AppArmor's profile to "unconfined". The value of this annotation
                # can be modified as long users know which profiles they have available
                # in AppArmor.
                container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
                container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                  initialDelaySeconds: 5
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                      divisor: '1'
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                            set -o errexit
                            set -o pipefail
                            set -o nounset
                            
                            # When running in AWS ENI mode, it's likely that 'aws-node' has
                            # had a chance to install SNAT iptables rules. These can result
                            # in dropped traffic, so we should attempt to remove them.
                            # We do it using a 'postStart' hook since this may need to run
                            # for nodes which might have already been init'ed but may still
                            # have dangling rules. This is safe because there are no
                            # dependencies on anything that is part of the startup script
                            # itself, and can be safely run multiple times per node (e.g. in
                            # case of a restart).
                            if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                            then
                                echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                                iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                            fi
                            echo 'Done!'
                            
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                resources:
                  limits:
                    cpu: 500m
                    memory: 1500Mi
                  requests:
                    cpu: 200m
                    memory: 750Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - CHOWN
                      - KILL
                      - NET_ADMIN
                      - NET_RAW
                      - IPC_LOCK
                      - SYS_ADMIN
                      - SYS_RESOURCE
                      - DAC_OVERRIDE
                      - FOWNER
                      - SETGID
                      - SETUID
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                # Unprivileged containers need to mount /proc/sys/net from the host
                # to have write access
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                # Unprivileged containers need to mount /proc/sys/kernel from the host
                # to have write access
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Unprivileged containers can't set mount propagation to bidirectional
                  # in this case we will mount the bpf fs from an init container that
                  # is privileged and set the mount propagation from host to container
                  # in Cilium.
                  mountPropagation: HostToContainer
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              # Mount the bpf fs if it is not mounted. We will perform this task
              # from a privileged container because the mount propagation bidirectional
              # only works from privileged containers.
              - name: mount-bpf-fs
                image: "quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0"
                imagePullPolicy: IfNotPresent
                args:
                - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
                command:
                - /bin/bash
                - -c
                - --
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: write-cni-conf-when-ready
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - NET_ADMIN
                      - SYS_ADMIN
                      - SYS_RESOURCE
                    drop:
                      - ALL
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin # .Values.cni.install
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccount: "cilium"
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                      # note: items are not explicitly listed here, since the entries of this secret
                      # depend on the peers configured, and that would cause a restart of all agents
                      # at every addition/removal. Leaving the field empty makes each secret entry
                      # to be automatically projected into the volume as a file whose name is the key.
                  - secret:
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
              - name: host-proc-sys-net
                hostPath:
                  path: /proc/sys/net
                  type: Directory
              - name: host-proc-sys-kernel
                hostPath:
                  path: /proc/sys/kernel
                  type: Directory
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
        ---
        # Source: cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
          # of one replica and no user configured Recreate strategy.
          # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
          # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.15.3@sha256:c97f23161906b82f5c81a2d825b0646a5aa1dfb4adf1d49cbb87815079e69d61"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 5
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                resources:
                  limits:
                    memory: 120Mi
                  requests:
                    cpu: 20m
                    memory: 60Mi
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccount: "cilium-operator"
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/templates/hubble-relay/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-relay
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 65532
              containers:
                - name: hubble-relay
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                    runAsGroup: 65532
                    runAsNonRoot: true
                    runAsUser: 65532
                  image: "quay.io/cilium/hubble-relay:v1.15.3@sha256:b9c6431aa4f22242a5d0d750c621d9d04bdc25549e4fb1116bfec98dd87958a2"
                  imagePullPolicy: IfNotPresent
                  command:
                    - hubble-relay
                  args:
                    - serve
                  ports:
                    - name: grpc
                      containerPort: 4245
                  readinessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  livenessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  startupProbe:
                    # give the relay one minute to start up
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                    failureThreshold: 20
                    periodSeconds: 3
                  resources:
                    limits:
                      memory: 32Mi
                    requests:
                      cpu: 20m
                      memory: 27Mi
                  volumeMounts:
                  - name: config
                    mountPath: /etc/hubble-relay
                    readOnly: true
                  - name: tls
                    mountPath: /var/lib/hubble-relay/tls
                    readOnly: true
                  terminationMessagePolicy: FallbackToLogsOnError
              restartPolicy: Always
              priorityClassName: 
              serviceAccount: "hubble-relay"
              serviceAccountName: "hubble-relay"
              automountServiceAccountToken: false
              terminationGracePeriodSeconds: 1
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - name: config
                configMap:
                  name: hubble-relay-config
                  items:
                  - key: config.yaml
                    path: config.yaml
              - name: tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-relay-client-certs
                      items:
                        - key: tls.crt
                          path: client.crt
                        - key: tls.key
                          path: client.key
                        - key: ca.crt
                          path: hubble-server-ca.crt
        ---
        # Source: cilium/templates/cilium-ingress-class.yaml
        apiVersion: networking.k8s.io/v1
        kind: IngressClass
        metadata:
          name: cilium
        spec:
          controller: cilium.io/ingress-controller
        ---
        # Source: cilium/templates/cilium-ingress-service.yaml
        apiVersion: v1
        kind: Endpoints
        metadata:
          name: cilium-ingress
          namespace: kube-system
          annotations:
            service.beta.kubernetes.io/aws-load-balancer-type: nlb
        subsets:
        - addresses:
          - ip: "192.192.192.192"
          ports:
          - port: 9999

